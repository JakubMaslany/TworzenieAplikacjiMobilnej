{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kubam\\\\Documents\\\\GitHub\\\\TworzenieAplikacjiMobilnej\\\\EcoHabit\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport HabitCard from '../components/HabitCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  useEffect(() => {\n    const fetchHabits = async () => {\n      try {\n        const response = await api.get('/habits');\n        setHabits(response.data);\n      } catch (err) {\n        console.error('Failed to fetch habits');\n      }\n    };\n    fetchHabits();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), habits.map(habit => /*#__PURE__*/_jsxDEV(HabitCard, {\n      habit: habit\n    }, habit._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"gIacv8FFx8NWfH/T9k0vnBCdA0k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","HabitCard","jsxDEV","_jsxDEV","Dashboard","_s","habits","setHabits","fetchHabits","response","get","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","habit","_id","_c","$RefreshReg$"],"sources":["C:/Users/kubam/Documents/GitHub/TworzenieAplikacjiMobilnej/EcoHabit/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\nimport HabitCard from '../components/HabitCard';\r\n\r\nconst Dashboard = () => {\r\n  const [habits, setHabits] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchHabits = async () => {\r\n      try {\r\n        const response = await api.get('/habits');\r\n        setHabits(response.data);\r\n      } catch (err) {\r\n        console.error('Failed to fetch habits');\r\n      }\r\n    };\r\n    fetchHabits();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Your Habits</h1>\r\n      {habits.map((habit) => (\r\n        <HabitCard key={habit._id} habit={habit} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,SAAS,CAAC;QACzCH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;MACzC;IACF,CAAC;IACDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBb,MAAM,CAACc,GAAG,CAAEC,KAAK,iBAChBlB,OAAA,CAACF,SAAS;MAAiBoB,KAAK,EAAEA;IAAM,GAAxBA,KAAK,CAACC,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CAvBID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}